syntax = "proto3";

service MasterService {
	rpc Introduce (IntroduceRequest) returns (IntroduceReply) {}
	rpc Heartbeat (Empty) returns (Empty) {}
	rpc StorageChange(StorageChangeRequest) returns (Empty) {}
	rpc InstallRule(InstallRuleRequest) returns (Empty) {}
	rpc RemoveRule(RemoveRuleRequest) returns (Empty) {}
	rpc GetView(Empty) returns (GetViewReply) {}
} 

service StorageManagerService {
	rpc Put(PutRequest) returns (Empty) {}
	rpc Get (GetRequest) returns (GetReply) {}
	rpc Remove (RemoveRequest) returns (Empty) {}
	rpc CopyFrom (CopyFromRequest) returns (Empty) {}
}

service StorageClientService {
	rpc Put(PutRequest) returns (Empty) {}
	rpc Get(GetRequest) returns (GetReply) {}
	rpc Remove(RemoveRequest) returns (Empty) {}
	rpc InstallRule(InstallRuleRequest) returns (Empty) {}
	rpc RemoveRule(RemoveRuleRequest) returns (Empty) {} 
}

// Enumerates the storage types storage managers can interface with.
enum StorageName {
	EPHEMERAL = 0;
	AMAZONS3 = 1;
}

enum StorageType {
	MANAGED = 0;
	UNMANAGED = 1;
}

enum OperationType {
	GET = 0;			// 
	PUT = 1;			// puts in dst_mgr
	REMOVE = 2;		// removes from src_mgr
}	

message Empty {}

message IntroduceRequest {

	message StorageManagerIntroduce {
		message FileId {
			string key = 1;
		}	

		StorageType storage_type = 1;
		StorageName storage_name = 2;
		string rpc_hostname = 3;
		string rpc_port = 4;
		repeated FileId file = 5;
	}

	message StorageClientIntroduce {
		string rpc_hostname = 1;
		string rpc_port = 2;
	}

	oneof introduce {
		StorageManagerIntroduce storage_manager = 1;
		StorageClientIntroduce storage_client = 2;
	}
}

message IntroduceReply {
	string name = 1;
}

message CopyFromRequest {
	string key = 1;
	string dst_uri = 2;	
}

message GetRequest {
	string key = 1;
}

message GetReply {
	string value = 1;
}

message PutRequest {
	string key = 1;
	string value = 2;
}

message RemoveRequest {
	string key = 1;
}

message Rule {
	enum OperationType {
		GET = 0;			// 
		PUT = 1;			// puts in dst_mgr
		REMOVE = 2;		// removes from src_mgr
	}	

	message Manager {
		string name = 1; // populated by scheduler
		string uri = 2; // populated by storage master
	}

	message Action {	
		message GetAction {
			string key = 1;
			Manager mgr = 2;
		}

		message CopyFromAction {
			string key = 1;
			Manager src_mgr = 2;
			Manager dst_mgr = 3;
		}

		message RemoveAction {
			string key = 1;
			Manager mgr = 2;	
		}

		oneof action_type {
			GetAction get_action = 1;
			CopyFromAction copy_from_action = 2;
			RemoveAction remove_action = 3;
		}
	}
	
	OperationType op_type = 1;
	string key = 2;
	repeated Action action = 4;
}

message InstallRuleRequest {
	string client = 1;
	Rule rule = 2;
}

message RemoveRuleRequest {
	string client = 1;
	Rule rule = 2;
}

message StorageChangeRequest {
	message Delta{
		OperationType op = 1;
		string key = 2;
		string manager = 3;
	}

	repeated Delta storage_change = 1;
}

message GetViewReply {
	message ManagerView {
		string name = 1;
		repeated string key = 2; // Keys at the manager
	}	

	repeated ManagerView view = 1;
}